import UIKit

let alphabetEnglish = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]

var cipherText = "KYZJHLVJKZFETRDVWIFDVCFEDLJBEVRIKYVMVIPVEUFWRCFEXUZEEVINVJYRIVURKRYZXYVEUJVRWFFUIVJKRLIREKZEJZCZTFEMRCCVPZUXFKKVEKFKYVIVJKRLIREKWZIJKREUJVKKCVUUFNENZKYRXZEREUKFEZTBEFNZEXDLJBNFLCURJVMVISVCRKVRWKVIRSFLKWZWKVVEDZELKVJDLJBJYFNVULGNVRIZEXCVRKYVIJYFVJUVJZXEVIAVREJREURGCRZUUIVJJJYZIKDLJBJKREUJJZOWFFKFEVSLKRJBREPFEVNYFBEFNJYZDREUKYVPCCTFEWZIDKYRKYVJVVDJDLTYSZXXVIKYREKYRKYVJRSJLIUCPSIFRUJYFLCUVIVUJKLIUPREUKYZTBPFLUWZXLIVYVNFLCULJVKYZJWIRDVKFYZJRUMREKRXVREUGVIWFIDRERCGYRDRCVJKILKNYVEVEKVIZEXRIFFDZEJKVRUYVKVEUJKFSVRCDFJKJYVVGZJYZKJYVRUKZCKVUJCZXYKCPUFNENYZCVNRCBZEXRHLZTBYREUJYRBVYVCCFRWKVIIVRTYZEXKYVKRSCVREUKYVESLKKZEJVRKWIFDKYVIVDLJBEVVUJRWVNDZELKVJSVWFIVYVNRIDJLGREUCFFBJRKVRJVDLJBRJBVUDVKFUZEEVIWFIREVXFKZRKZFEFWJFIKJVZXYKVVEDFEKYJVRICZVIZUZEWFIDVUYZDFWDPGCREJKFNIZKVRSFFBRSFLKYZDREUYVUZEWFIDVUDVFWYZJGCREJEFKKFTFFGVIRKVYZJIVAVTKZFEJKLEXSLKKYILJKDVZEKFUFXXVUIVGFIKVIDFUVZWZYRUKFUFKYZJSFFBNZKYFLKYZDJFSVZKGCVEKPFWGVFGCVYRUCVWKDLJBJTFDGREZVJKVJCRDFKFIJREUJGRTVOREUNFLCUKRCBREUZRCIVRUPBEVNRCFKFWYZJWIZVEUJKYVZEKVIMZVNJWFCCFNVUFEVRWKVIREFKYVIDFEKYRWKVIDFEKYREUKNFYLEUIVUFIJFGVFGCVZEKFKYVGIFTVJJZYVRIUWIFDDLJBFETVRXRZEYVTRCCVUDVRKYFDVREUUVTCRIVUKYRKKYZEXJTFLCUXFFEVFWKNFNRPJYVTFLCUDRBVDPCZWVMVIPUZWWZTLCKFIYVTFLCUYVCGNZKYKYVGIFAVTKRWKVIRCCYVUSVNZCCZEXKFTFFGVIRKVZWYVTFLCUIVRUKYVSFFBSVWFIVZKNVEKKFGLSCZTRKZFEREUTFLCURUUWFFKEFKVJKYIFLXYFLKZKYVNFLCUEFKDVUUCVNZKYDPKVOKSLKYVNREKVUKYVTYRETVKFJVKKYVIVTFIUJKIRZXYKZEJGFKJKYRKYVUVVDVUWRTKLRCCPZERTTLIRKVZLEUVIJKFFUNYVIVKYZJNRJTFDZEXWIFDDLJBNREKVURDVRJLIVFWTFEKIFCFMVIYZJCZWVJJKFIPYVJRCJFNZIVUCZBVRJTZVEKZJKREUJLWWVIJDVEKRCREXLZJYRKKYVJZXYKFWRWRTKLRCVIIFIRDZJKRBVFERGIZEKVUGRXVNFLCUXERNRKYZJJFLCWFIVMVINYZCVZTFLCULEUVIJKREUYZJGVIJGVTKZMVZTFLCUEFKCVKYZDIVRUKYVSFFBWFIGIFWVJJZFERCGVIJFERCREUGIRTKZTRCIVRJFEJDLJBYRJYZJMVIJZFEFWKYVKILKYREUZKJEFKRCNRPJKYVMVIJZFEFWKYVKILKYKYRKKYVIVJKFWKYVNFICUJYRIVJYVJGIFEVKFMVISFJVREJNVIJKFVMVEKYVJZDGCVJKFWHLVJKZFEJRJNVCCREUKYVKYFLXYKFWKYZIKPGRXVWFFKEFKVJJVVDVURCCKFFIVRCJKZCCNVRXIVVUKFYRMVUZEEVITYRKRCCKYZJFLKREUJVVNYVIVZKCVWKLJ"

//key = "R"

var cipherTextArr = Array(cipherText)
let orderFrequencyLetters = ["E", "T", "A", "O", "N", "I", "S", "R", "H", "L", "D", "C", "U", "P", "F", "M", "W", "Y", "B", "G", "V", "K", "Q", "X", "J", "Z"]

var dictOfFrequencyLetters = [String:Int]()
var orderingMaxFrequencedLetters = [String]()


for i in alphabetEnglish{
    let count = cipherTextArr.filter({$0 == Character(i)}).count
    dictOfFrequencyLetters[String(i)] = count
}

print(dictOfFrequencyLetters)



for _ in dictOfFrequencyLetters{
    let maxVal = dictOfFrequencyLetters.max { $0.value < $1.value }
    
    print(maxVal!.key, maxVal!.value)
    dictOfFrequencyLetters[maxVal!.key] = nil
    
}
